{"version":3,"file":"static/js/286.845399ed.chunk.js","mappings":"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","sources":["components/FetchApi.jsx","components/MostRated.jsx","pages/MostRatedMovie.jsx"],"sourcesContent":["import axios from 'axios';\n\n\n\naxios.defaults.baseURL = \"https://api.themoviedb.org/3/\";\naxios.defaults.params = {\n    api_key: 'a593ee12b04969e9385b0db7776b59ce',\n  };\n\n\n\nexport const getTrendingMovie = async () => {\n  const { data } = await axios.get('/trending/movie/day', {\n    params: {\n      page: 1,\n    },\n  });\n  return data;\n};\n\n\nexport const getUpcomingMovie = async () => {\n  const { data } = await axios.get('/movie/top_rated', {\n    params: {\n      page: 1,\n    },\n  });\n  return data;\n};\n\nexport const getSearchMovie = async (query) => {\n  const { data } = await axios.get('/search/movie', {\n    params: {\n      query,\n    },\n  });\n  console.log(data);\n  return data;\n};\n\nexport const getMovieById = async (id) => {\n  const { data } = await axios.get(`/movie/${id}`)\n  return data;\n}\n\nexport const getMovieCast= async (id) => {\n  const { data } =  await axios.get(`/movie/${id}/credits`)\n  return data;\n}\n\nexport const getMovieReview = async id => {\n  const { data } = await axios.get(`/movie/${id}/reviews`)\n  return data.results;\n}","\nimport Card from 'react-bootstrap/Card';\nimport \"./Trending/Trending.style.scss\"\nimport { Link } from 'react-router-dom';\n\nexport const MostRated = ( {data} ) => {\n    return (\n      <>\n       <h2>Most Rated Movie</h2>\n        <div className=\"card-container\">\n          {data.map(({ id, title, release_date, poster_path }) => (\n           <Link to={`/movies/${id}`}  style={{ textDecoration: \"none\" }}><Card key={id} style={{ width: '13em' }}>\n              <Card.Img variant=\"top\" src={poster_path ? `https://image.tmdb.org/t/p/w500${poster_path}` : 'https://via.placeholder.com/700?text=NoImageFound'} />\n              <Card.Body>\n                <Card.Title>{title}</Card.Title>\n                <Card.Text>{release_date.split('-').reverse().join('.')}</Card.Text>\n              </Card.Body>\n            </Card>\n            </Link>\n          ))}\n        </div>\n        </>\n      );\n}","import { useEffect, useState } from \"react\";\nimport { MostRated } from \"components/MostRated\";\nimport { getUpcomingMovie } from \"components/FetchApi\";\n\nconst MostRatedMovie = () => {\n\n    const [upcoming, setUpcoming] = useState([]) \n\n    useEffect(() => {\n        const onUpcomingMovie = async () => {\n          try {\n            const {results} = await getUpcomingMovie(); \n            setUpcoming(results)\n      \n          } catch (error) {\n            console.error(error);\n          }\n        };\n        onUpcomingMovie();\n      }, []); \n\n      return <MostRated data={upcoming}/>\n\n}\n\nexport default MostRatedMovie;"],"names":["axios","api_key","getTrendingMovie","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$axios$get","data","wrap","_context","prev","next","params","page","sent","abrupt","stop","apply","arguments","getUpcomingMovie","_ref2","_callee2","_yield$axios$get2","_context2","getSearchMovie","_x","_ref3","_callee3","query","_yield$axios$get3","_context3","console","log","getMovieById","_x2","_ref4","_callee4","id","_yield$axios$get4","_context4","concat","getMovieCast","_x3","_ref5","_callee5","_yield$axios$get5","_context5","getMovieReview","_x4","_ref6","_callee6","_yield$axios$get6","_context6","results","MostRated","_jsxs","_Fragment","children","_jsx","className","map","title","release_date","poster_path","Link","to","style","textDecoration","Card","width","variant","src","split","reverse","join","_useState","useState","_useState2","_slicedToArray","upcoming","setUpcoming","useEffect","_yield$getUpcomingMov","t0","error","onUpcomingMovie"],"sourceRoot":""}