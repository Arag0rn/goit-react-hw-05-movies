{"version":3,"file":"static/js/358.36d1d192.chunk.js","mappings":"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","sources":["components/FetchApi.jsx","components/CastList/CastCard.jsx","pages/CastPage.jsx"],"sourcesContent":["import axios from 'axios';\n\n\n\naxios.defaults.baseURL = \"https://api.themoviedb.org/3/\";\naxios.defaults.params = {\n    api_key: 'a593ee12b04969e9385b0db7776b59ce',\n  };\n\n\n\nexport const getTrendingMovie = async () => {\n  const { data } = await axios.get('/trending/movie/day', {\n    params: {\n      page: 1,\n    },\n  });\n  return data;\n};\n\n\nexport const getUpcomingMovie = async () => {\n  const { data } = await axios.get('/movie/top_rated', {\n    params: {\n      page: 1,\n    },\n  });\n  return data;\n};\n\nexport const getSearchMovie = async (query) => {\n  const { data } = await axios.get('/search/movie', {\n    params: {\n      query,\n    },\n  });\n  console.log(data);\n  return data;\n};\n\nexport const getMovieById = async (id) => {\n  const { data } = await axios.get(`/movie/${id}`)\n  return data;\n}\n\nexport const getMovieCast= async (id) => {\n  const { data } =  await axios.get(`/movie/${id}/credits`)\n  return data;\n}\n\nexport const getMovieReview = async id => {\n  const { data } = await axios.get(`/movie/${id}/reviews`)\n  return data.results;\n}","import Card from 'react-bootstrap/Card';\n\nexport const CastCard = ( {data} ) => {\n    return (\n      <>\n    <h2>Cast</h2>\n      <div className=\"card-container\">\n        {data.map(({ profile_path, name, character }) => (\n         <Card style={{ width: '9rem'}}>\n         <Card.Img  variant=\"top\" src={profile_path ? `https://image.tmdb.org/t/p/w500${profile_path}` : 'https://via.placeholder.com/700?text=NoImageFound'} />\n         <Card.Body>\n           <Card.Title><b>{name}</b> as {character}</Card.Title>\n        \n         </Card.Body>\n       </Card>\n        ))}\n      </div>\n      </>\n    );\n  };","import { useParams } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport { CastCard } from \"components/CastList/CastCard\";\nimport { getMovieCast } from \"components/FetchApi\";\nimport { Loader } from 'components/Loader/Loader'; \n\n\nconst CastPage = () => {\n    const [movieCast, setMovieCast] = useState([]);\n    const { id } = useParams();\n    const [loader, setLoader] = useState(false);\n\n\n    useEffect(() => {\n        const onGetMovieCast = async () => {\n            setLoader(true)\n            try {\n                const { cast } = await getMovieCast(id);\n                setMovieCast(cast);\n            } catch (error) {\n                console.error(error);\n            } finally {\n                setLoader(false)\n            }\n        };\n\n        onGetMovieCast();\n    }, [id]);\n\n    return (\n        <>\n            {loader ? (\n                <Loader />\n            ) : (\n                <CastCard data={movieCast}></CastCard>\n            )}\n        </>\n    );\n};\n\nexport default CastPage;"],"names":["axios","api_key","getTrendingMovie","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$axios$get","data","wrap","_context","prev","next","params","page","sent","abrupt","stop","apply","arguments","getUpcomingMovie","_ref2","_callee2","_yield$axios$get2","_context2","getSearchMovie","_x","_ref3","_callee3","query","_yield$axios$get3","_context3","console","log","getMovieById","_x2","_ref4","_callee4","id","_yield$axios$get4","_context4","concat","getMovieCast","_x3","_ref5","_callee5","_yield$axios$get5","_context5","getMovieReview","_x4","_ref6","_callee6","_yield$axios$get6","_context6","results","CastCard","_jsxs","_Fragment","children","_jsx","className","map","profile_path","name","character","Card","style","width","variant","src","_useState","useState","_useState2","_slicedToArray","movieCast","setMovieCast","useParams","_useState3","_useState4","loader","setLoader","useEffect","_yield$getMovieCast","cast","t0","error","finish","onGetMovieCast","Loader"],"sourceRoot":""}